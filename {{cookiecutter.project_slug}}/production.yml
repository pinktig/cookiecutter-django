version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  {% if cookiecutter.cloud_provider == 'None' -%}
  production_mediafiles_data: {}
  {%- endif %}

services:
  django:{% if cookiecutter.use_celery == 'y' %} &django{% endif %}
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: {{ cookiecutter.project_slug }}_production_django
    {% if cookiecutter.cloud_provider == 'None' -%}
    volumes:
      - production_mediafiles_data:/webdata/mediafiles
    {%- endif %}
    depends_on:
      - postgres
      - redis
      {% if cookiecutter.cloud_provider == 'None' -%}
      - nginx
      {%- endif %}
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: ["/bin/bash", "/start"]

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: {{ cookiecutter.project_slug }}_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: {{ cookiecutter.project_slug }}_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"

  redis:
    image: redis:5.0

  {%- if cookiecutter.cloud_provider == 'None' %}
  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: {{ cookiecutter.project_slug }}_production_nginx
    restart: always
    volumes:
      - production_mediafiles_data:/webdata/mediafiles
  {% endif %}
  {%- if cookiecutter.use_celery == 'y' %}

  celeryworker:
    <<: *django
    image: {{ cookiecutter.project_slug }}_production_celeryworker
    command: ["/bin/bash", "/start-celeryworker"]

  celerybeat:
    <<: *django
    image: {{ cookiecutter.project_slug }}_production_celerybeat
    command: ["/bin/bash", "/start-celerybeat"]

  flower:
    <<: *django
    image: {{ cookiecutter.project_slug }}_production_flower
    ports:
      - "5555:5555"
    command: ["/bin/bash", "/start-flower"]

  {%- endif %}

  {% if cookiecutter.cloud_provider == 'AWS' %}
  awscli:
    build:
      context: .
      dockerfile: ./compose/production/aws/Dockerfile
    env_file:
      - ./.envs/.production/.django
    volumes:
      - production_postgres_data_backups:/backups
  {%- endif %}
